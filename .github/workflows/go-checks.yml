# Reusable Go Checks workflow
# This workflow performs comprehensive Go code quality checks including vet, static analysis, linting, vulnerability checks, and security checks

name: Go Checks

on:
  pull_request:
  workflow_call:
    inputs:
      go-version:
        description: 'Go version to use'
        required: false
        type: string
        default: 'stable'
      working-directory:
        description: 'Working directory for the Go project'
        required: false
        type: string
        default: '.'
    secrets:
      github-token:
        description: 'GitHub token for accessing private repositories'
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Vet:
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: ./.github/workflows/go-checks.yml@setup
        
    - name: Vet
      run: go vet ./...
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: false
      
  Static-Analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: ./.github/workflows/go-checks.yml@setup

    - name: Cache staticcheck
      uses: actions/cache@v4
      with:
        path: ~/go/bin/staticcheck
        key: staticcheck-${{ runner.os }}-latest
        restore-keys: |
          staticcheck-${{ runner.os }}-

    - name: Install staticcheck
      run: |
        if [ ! -f ~/go/bin/staticcheck ]; then
          go install honnef.co/go/tools/cmd/staticcheck@latest
        else
          # Update to latest version
          go install honnef.co/go/tools/cmd/staticcheck@latest
        fi

    - name: Static analysis
      run: staticcheck ./...
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: false

  Lint:
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: ./.github/workflows/go-checks.yml@setup

    - name: Cache golangci-lint
      uses: actions/cache@v4
      with:
        path: ~/go/bin/golangci-lint
        key: golangci-lint-${{ runner.os }}-latest
        restore-keys: |
          golangci-lint-${{ runner.os }}-

    - name: Install golangci-lint
      run: |
        if [ ! -f ~/go/bin/golangci-lint ]; then
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        else
          # Update to latest version
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        fi

    - name: Lint
      run: golangci-lint run ./...
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: false

  Vulnerability-Check:
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: ./.github/workflows/go-checks.yml@setup

    - name: Cache govulncheck
      uses: actions/cache@v4
      with:
        path: ~/go/bin/govulncheck
        key: govulncheck-${{ runner.os }}-latest
        restore-keys: |
          govulncheck-${{ runner.os }}-

    - name: Install govulncheck
      run: |
        if [ ! -f ~/go/bin/govulncheck ]; then
          go install golang.org/x/vuln/cmd/govulncheck@latest
        else
          # Update to latest version
          go install golang.org/x/vuln/cmd/govulncheck@latest
        fi

    - name: Vulnerability check
      run: govulncheck ./...
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: false

  Security-Check:
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: ./.github/workflows/go-checks.yml@setup

    - name: Cache gosec
      uses: actions/cache@v4
      with:
        path: ~/go/bin/gosec
        key: gosec-${{ runner.os }}-latest
        restore-keys: |
          gosec-${{ runner.os }}-

    - name: Install gosec
      run: |
        if [ ! -f ~/go/bin/gosec ]; then
          go install github.com/securego/gosec/v2/cmd/gosec@latest
        else
          # Update to latest version
          go install github.com/securego/gosec/v2/cmd/gosec@latest
        fi

    - name: Security check
      run: gosec ./...
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: false

# Composite action definition
setup:
  name: 'Setup Go Environment'
  description: 'Setup Go environment with checkout and Go installation'
  runs:
    using: 'composite'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
          check-latest: true